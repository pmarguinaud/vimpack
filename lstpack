#!/usr/bin/perl -w


=head1 NAME

lstpack

=head1 SYNOPSIS

  $ lstpack 
  M arpifs/adiab/spcsi.F90
  + arpifs/adiab/spcsidg_part1.F90
  + arpifs/adiab/spcsidg_part2.F90
  ...
  + arpifs/module/util_yommp0_mod.F90
  M arpifs/setup/sutrans0.F90
  M arpifs/setup/sutrans.F90
  + ifsaux/hack/yomdbg.F90
  8 modified, 11 new

  $ lstpack -d
  + arpifs/adiab/spcsidg_part1.F90.xml
  M arpifs/adiab/spcsi.F90
  3c3
  <  & YDGEOMETRY,YDCST,YDLDDH,YDRIP,YDDYN,KM,KMLOC,KSTA,KEND,LDONEM,&
  ---
  >  & YDGEOMETRY,YDCST,YDLDDH,YDRIP,YDDYN,KSPEC2V,LDONEM,&
  69c69
  < USE YOMMP0       , ONLY : MYSETV
  ---
  ...

=head1 DESCRIPTION

List files in local view.

=head1 SEE ALSO

C<gmkpack>

=head1 AUTHORS

pmarguinaud@hotmail.com

=cut

use strict;
use File::Find;
use FileHandle;
use Cwd;

my $diff = @ARGV && ($ARGV[0] eq '-d');
shift if ($diff);
my $ibw = @ARGV && ($ARGV[0] eq '-ibw');
shift if ($ibw);

my $N = shift (@ARGV) || 1;

my $CWD = &cwd ();

my @view = do { my $fh = 'FileHandle'->new ('<.gmkview'); <$fh> };
chomp for (@view);
my @VIEW = splice (@view, 0, $N);

sub slurp
{
  my $f = shift;
  my $fh = 'FileHandle'->new ("<$f");
  local $/ = undef;
  my $t = <$fh>;
  return $t;
}

sub status
{
  my $f = shift;

  for my $view (@view)
    {
      if (-f (my $g = "$CWD/src/$view/$f"))
        {
          return (&slurp ($f) ne &slurp ($g) ? 'M' : '=', $view);
        }
    }
  return ('+', '');
}

my (%s, %f);

sub wanted
{
  my $view = shift;

  return unless (-f (my $f = $File::Find::name));
  return if ($f =~ m,/(?:\.intfb|\.include)/,o);
  return if ($f =~ m,\.(?:o|optrpt|lst|list|smod|mod|ok|lst.db|F90\.xml)$,o);
  return if ($f =~ m,\.(?:swp)$,o);
  return if ($f =~ m,\.fypp/,o);
  $f =~ s,^\./,,o;

  return if ($f{$f}++);

  my ($s, $v) = &status ($f);

  $s{$s}++;

  printf ("%s %s\n", $s, $f);

  if ($diff && ($s ne '+'))
    {
      my @o = $ibw ? ('-ibw') : ();
      system ('diff', @o, "$CWD/src/$v/$f", "$CWD/src/$view/$f");
    }


}

for my $VIEW (@VIEW)
  {
    chdir ("$CWD/src/$VIEW");
    &find ({wanted => sub { &wanted ($VIEW) }, no_chdir => 1}, '.');
  }

my %l = qw (= identical + new M modified);

my @l;

while (my ($k, $v) = each (%s))
  {
    push @l, sprintf ("%d %s", $v, $l{$k});
  }

@l && print join (', ', @l) . "\n";



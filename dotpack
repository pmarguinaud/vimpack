#!/usr/bin/perl -w

=head1 NAME

dotpack

=head1 SYNOPSIS

  [CNC pack]$ cd 48t3_cpg_drv+.01.PGI2211.cpu0
  [CNC 48t3_cpg_drv+.01.PGI2211.cpu0]$ dotpack CPG_GP_HYD 
  [CNC 48t3_cpg_drv+.01.PGI2211.cpu0]$ ls -l CPG_GP_HYD.svg 
  -rw-r--r-- 1 marguina mrpm 14975 Mar 30 16:17 CPG_GP_HYD.svg

=head1 DESCRIPTION

C<dotpack> relies on graphviz to create call graphs.

=head1 SEE ALSO

C<gmkpack>, graphviz

=head1 AUTHORS

pmarguinaud@hotmail.com

=cut

use strict;
use Data::Dumper;
use FileHandle;
use File::Basename;
use FindBin qw ($Bin);
use List::MoreUtils qw (uniq);
use Getopt::Long;

use lib "$Bin/lib";
use lib "$Bin/perl5";

use dotpack::finder;
use dotpack::graphv;


eval "use GraphViz2;";

if ($@)
  {
    die ("Please install the GraphViz2 module\n");
  }

my @PATH = split (m/:/o, $ENV{PATH});

for my $path (@PATH)
  {
    goto FOUND if (-f "$path/dot");
  }

die ("The `dot' executable (from graphviz) was not found in your PATH\n");

FOUND:

my @opts_s = qw (class);
my @opts_f = qw (help);
my %opts;

'dotpack::graphv'->getopts (opts_s => \@opts_s, opts_f => \@opts_f, opts => \%opts);

@opts_s = &uniq (@opts_s);
@opts_f = &uniq (@opts_f);

&GetOptions 
(
  map ({ ("$_=s", \$opts{$_}) } @opts_s),
  map ({ ("$_", \$opts{$_}) } @opts_f),
);

if ($opts{help})
  {
    print "Usage: ", &basename ($0), "\n";
    for (sort @opts_s)
      {
        print "  --$_ <string>\n";
      }
    for (sort @opts_f)
      {
        print "  --$_\n";
      }
  }

my $finder = 'dotpack::finder'->new ();

my $call = 'dotpack::graphv'->new (finder => $finder, %opts);

$call->graph (@ARGV);

